{"version":3,"file":"static/js/267.e6659a34.chunk.js","mappings":"qNAMe,SAASA,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAC5BC,GAAWC,EAAAA,EAAAA,MACVC,EAAaH,EAAKI,KAAI,YAA6C,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,aACpD,OAAO,UAAC,KAAD,gBAAgB,UAAC,KAAD,CAAUC,GAAE,kBAAaJ,GAAMK,MAAO,CAACC,KAAMV,GAA7C,WACvB,gBAAKW,IAAsB,OAAhBN,EAAD,UANE,mCAMF,OAAuCA,GAAgBO,EAAUC,IAAKP,EAAOQ,MAAM,SAC3F,SAAC,KAAD,UAAYR,KACZ,UAAC,KAAD,4BAA0BC,UAHVH,EAOnB,IAEF,OACQ,SAAC,KAAD,UACCF,GAGV,C,sICpBYa,EAAY,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAClC,OACI,SAAC,KAAD,WACA,SAAC,KAAD,CACEC,KAAK,OACLF,MAASA,EACTG,YAAY,oBACZF,SAAU,SAAAG,GAAC,OAAIH,EAASG,EAAEC,OAAOL,MAAtB,KAIhB,E,6CCqCD,EA5Ce,WAAO,IAAD,EACnB,GAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAIMC,EAAe,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GAChDC,EAAcF,EAAgBG,cAC9BC,EAAU,mCAAG,WAAOC,GAAP,mGAEYC,EAAAA,EAAAA,IAAYD,GAFxB,OAETE,EAFS,OAGTtC,EAAOsC,EAAatC,KAAKuC,QAC/Bd,EAAUzB,GACU,IAAhBA,EAAKwC,OACPb,EAAS,iCAGTA,EAAS,MATI,yGAAH,sDAoBhB,OALAc,EAAAA,EAAAA,YAAU,WACY,KAAhBR,GACJE,EAAWF,EAEZ,GAAE,CAACA,KAEF,iCACE,SAACjB,EAAD,CACEC,MAAOc,EACPb,SA7Be,SAAAD,GACnBa,EAA0B,KAAVb,EAAe,CAAEyB,OAAQzB,GAAU,CAAC,EACrD,IA6Be,OAAVS,EAAoC,KAAhBO,GAAsB,SAAClC,EAAA,EAAD,CAAWC,KAAMwB,KAAa,oBAAe,SAACmB,EAAA,EAAD,CAAOC,QAAUlB,KAG1G,SAAC,EAAAmB,SAAD,CAAUC,SAAU,aAApB,UACU,SAAC,KAAD,QAIf,C","sources":["components/MovieItem.jsx","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import React from 'react';\nimport { useLocation} from 'react-router-dom';\nimport { List, Item, ItemTitle, LinkItem, ItemText } from '../MoviesStyled';\nimport NoPoster from \"../api/no_poster.jpeg\";\nconst imageUrl = 'https://image.tmdb.org/t/p/w500';\n\nexport default function MovieItem({ data }) {\n  const location = useLocation();\n   const listMovie =  data.map(({id, poster_path, title, release_date}) => {\n     return <Item key={id}> <LinkItem to={`/movies/${id}`} state={{from: location}}>\n     <img src={(poster_path !== null) ? `${imageUrl}${poster_path}` : NoPoster} alt={title} width=\"400\"/>\n       <ItemTitle>{title}</ItemTitle>\n       <ItemText> Release date:{ release_date}</ItemText>\n     </LinkItem>\n            \n        </Item>\n   }\n   )\n  return (\n          <List>\n          {listMovie}\n    </List>\n  )\n}\n","import React from 'react';\nimport {Input, TotalMovies} from \"../MoviesStyled\"\n\nexport const SearchBox = ({value, onChange}) => {\nreturn (\n    <TotalMovies>\n    <Input\n      type='text'\n      value = {value}\n      placeholder='Insert your query'\n      onChange={e => onChange(e.target.value)}\n      />\n    </TotalMovies>\n  )\n}\n  \n\n","import { SearchBox } from 'components/SearchBox';\nimport React, {Suspense, useEffect, useState} from 'react'\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport Error from '../components/Error'\nimport MovieItem from 'components/MovieItem';\nimport { SearchMovie } from '../api/FetchConst'\n\nconst Movies = () => {\n  const [search, setSearch] = useState([]);\n  const [error, setError] = useState(null)\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filterSearch = value => {\n    setSearchParams(value !== \"\" ? { filter: value } : {})\n  }\n  const searchQueryFull = searchParams.get('filter') ?? \"\";\n  const searchQuery = searchQueryFull.toLowerCase();\n  const fetchMovie = async (query) => {\n    try {\n      const searchResult = await SearchMovie(query);\n      const data = searchResult.data.results\n      setSearch(data)\n      if (data.length === 0) {\n        setError(`Not any movies for your query`)\n      }\n      else {\n        setError(null)\n      }   \n    }\n    catch (error) {    \n    }\n  }\n  useEffect(() => {\n    if (searchQuery === \"\") { return };\n    fetchMovie(searchQuery)\n    // eslint-disable-next-line\n  }, [searchQuery]);\n  return (\n    <>\n      <SearchBox\n        value={searchQueryFull}\n        onChange={filterSearch}\n      />\n      {(error === null) ? ((searchQuery !== \"\") ? <MovieItem data={search} /> : <div></div>) : <Error message={ error} />}\n      \n      \n      <Suspense fallback={\"Loading...\"}> \n                <Outlet/>\n            </Suspense>\n    </>\n  )\n}\nexport default Movies"],"names":["MovieItem","data","location","useLocation","listMovie","map","id","poster_path","title","release_date","to","state","from","src","NoPoster","alt","width","SearchBox","value","onChange","type","placeholder","e","target","useState","search","setSearch","error","setError","useSearchParams","searchParams","setSearchParams","searchQueryFull","get","searchQuery","toLowerCase","fetchMovie","query","SearchMovie","searchResult","results","length","useEffect","filter","Error","message","Suspense","fallback"],"sourceRoot":""}